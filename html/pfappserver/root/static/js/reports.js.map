{"version":3,"sources":["../admin/reports.js","../admin/dynamicreport.js"],"names":["init","$","on","event","today","Date","this","find","each","datepicker","click","preventDefault","dp","closest","data","dates","attr","substr","split","pickers","element","val","update","match","exec","delegateTarget","id","emptyId","trigger","addClass","drawGraphs","parent","start","end","startDate","getUTCFullYear","getUTCMonth","getUTCDate","join","endDate","graph","last","location","hash","window","hashchange","pfOnHashChange","updateSection","activateNavLink","items","DynamicReport","DynamicReportView","prototype","Items","formName","modalId","createSelector","get","options","ajax","url","always","done","success","fail","jqXHR","status_msg","getStatusMsg","showError","errorSibling","post","type","ItemView","call","F"],"mappings":"AAEA,QAASA,QACLC,EAAE,YAAYC,GAAG,iBAAkB,SAASC,GAExC,GAAIC,GAAQ,GAAIC,KAChBJ,GAAEK,MAAMC,KAAK,0BAA0BC,KAAK,WACxCP,EAAEK,MAAMG,WAAW,aAAcL,KAIrCH,EAAE,mBAAmBS,MAAM,SAASP,GAChCA,EAAMQ,gBACN,IAAIC,GAAKX,EAAEK,MAAMO,QAAQ,cAAcN,KAAK,oBAAoBO,KAAK,cACjEC,EAAQd,EAAEK,MAAMU,KAAK,QAAQC,OAAO,GAAGC,MAAM,IACjDN,GAAGO,QAAQ,GAAGC,QAAQC,IAAIN,EAAM,IAChCH,EAAGO,QAAQ,GAAGC,QAAQC,IAAIN,EAAM,IAChCH,EAAGO,QAAQ,GAAGG,SACdV,EAAGO,QAAQ,GAAGG,WAGlBrB,EAAE,iBAAiBC,GAAG,QAAS,gBAAiB,SAASC,GACrD,GAAIoB,GAAQ,YAAYC,KAAKrB,EAAMsB,eAAeC,IAC9CA,EAAKH,EAAM,GACXI,EAAUJ,EAAM,EAGpB,OAFAtB,GAAE,IAAIyB,GAAIE,QAAQ,UAClB3B,EAAE,IAAI0B,GAASE,SAAS,WACjB,GAIX,IAAIH,GAAKzB,EAAEK,MAAMC,KAAK,UAAUS,KAAK,KACjCU,IACAI,WAAWJ,KAInBzB,EAAE,QAAQC,GAAG,aAAc,yBAA0B,SAASC,GAC1D,GAAIS,GAAKX,EAAEK,MAAMyB,SAASjB,KAAK,aAC/B,IAAKF,GAAOA,EAAGG,MAAf,CAGA,GAAIiB,GAAQpB,EAAGG,MAAM,GACjBkB,EAAMrB,EAAGG,MAAM,EACnB,IAAKiB,GAAUC,EAAf,CAGA,GAAIC,IAAaF,EAAMG,iBAAmBH,EAAMI,cAAgB,EAAIJ,EAAMK,cAAcC,KAAK,KACzFC,GAAWN,EAAIE,iBAAmBF,EAAIG,cAAgB,EAAIH,EAAII,cAAcC,KAAK,KACjFE,EAAQvC,EAAE,4DAA4DwC,OAAOzB,KAAK,QAAQC,OAAO,EACrGhB,GAAEK,MAAMG,WAAW,QACnBiC,SAASC,MAAQH,EAAON,EAAWK,GAASD,KAAK,SAIrDrC,EAAE2C,QAAQC,WAAWC,eAAeC,cAAe,iBACnD9C,EAAE2C,QAAQC,aACVG,kBCzDJ/C,EAAE,WACE,GAAIgD,GAAQ,GAAIC,cACL,IAAIC,oBAAoBF,MAAOA,EAAOlB,OAAQ9B,EAAE,eAM/D,IAAIiD,eAAgB,YAGpBA,eAAcE,UAAY,GAAIC,OAE9BH,cAAcE,UAAU1B,GAAM,iBAE9BwB,cAAcE,UAAUE,SAAY,qBAEpCJ,cAAcE,UAAUG,QAAY,sBAEpCL,cAAcE,UAAUI,eAAiB,uBAEzCN,cAAcE,UAAUK,IAAM,SAASC,GACnCzD,EAAE0D,MACEC,IAAKF,EAAQE,MAEZC,OAAOH,EAAQG,QACfC,KAAKJ,EAAQK,SACbC,KAAK,SAASC,GACX,GAAIC,GAAaC,aAAaF,EAC9BG,WAAUV,EAAQW,aAAcH,MAI5ChB,cAAcE,UAAUkB,KAAO,SAASZ,GACpCzD,EAAE0D,MACEC,IAAKF,EAAQE,IACbW,KAAM,OACNzD,KAAM4C,EAAQ5C,OAEb+C,OAAOH,EAAQG,QACfC,KAAKJ,EAAQK,SACbC,KAAK,SAASC,GACX,GAAIC,GAAaC,aAAaF,EAC9BG,WAAUV,EAAQW,aAAcH,KAS5C,IAAIf,mBAAoB,SAASO,GAC7Bc,SAASC,KAAKnE,KAAKoD,EAEnBpD,MAAKyB,OAAS2B,EAAQ3B,OACtBzB,KAAK2C,MAAQS,EAAQT,MAGzBE,mBAAkBC,UAAY,WAC1B,QAASsB,MAET,MADAA,GAAEtB,UAAYoB,SAASpB,UAChB,GAAIsB","file":"reports.js","sourcesContent":["/* -*- Mode: js; indent-tabs-mode: nil; js-indent-level: 4 -*- */\n\nfunction init() {\n    $('#section').on('section.loaded', function(event) {\n        /* Set the end date of the range datepickers to today */\n        var today = new Date();\n        $(this).find('.input-daterange input').each(function() {\n            $(this).datepicker('setEndDate', today);\n        });\n\n        /* Register clicks on pre-defined periods */\n        $('#reports .nav a').click(function(event) {\n            event.preventDefault();\n            var dp = $(this).closest('.container').find('.input-daterange').data('datepicker');\n            var dates = $(this).attr('href').substr(1).split('/');\n            dp.pickers[0].element.val(dates[0]);\n            dp.pickers[1].element.val(dates[1]);\n            dp.pickers[0].update();\n            dp.pickers[1].update();\n        });\n\n        $('[id$=\"Empty\"]').on('click', '[href=\"#add\"]', function(event) {\n            var match = /(.+)Empty/.exec(event.delegateTarget.id);\n            var id = match[1];\n            var emptyId = match[0];\n            $('#'+id).trigger('addrow');\n            $('#'+emptyId).addClass('hidden');\n            return false;\n        });\n\n    /* Build graph when loading section */\n        var id = $(this).find('.chart').attr('id');\n        if (id)\n            drawGraphs(id);\n    });\n\n    /* Reload section when changing date */\n    $('body').on('changeDate', '.input-daterange input', function(event) {\n        var dp = $(this).parent().data('datepicker');\n        if (!dp || !dp.dates) {\n            return;\n        }\n        var start = dp.dates[0];\n        var end = dp.dates[1];\n        if (!start || !end) {\n            return;\n        }\n        var startDate = [start.getUTCFullYear(), (start.getUTCMonth() + 1), start.getUTCDate()].join('-');\n        var endDate = [end.getUTCFullYear(), (end.getUTCMonth() + 1), end.getUTCDate()].join('-');\n        var graph = $('.piegraph a.active, .sidenav-section .nav-list .active a').last().attr('href').substr(1);\n        $(this).datepicker('hide');\n        location.hash = [graph, startDate, endDate].join('/');\n    });\n\n    /* Hash change handlder */\n    $(window).hashchange(pfOnHashChange(updateSection, '/graph/nodes'));\n    $(window).hashchange();\n    activateNavLink();\n}\n","$(function() { // DOM ready\n    var items = new DynamicReport();\n    var view = new DynamicReportView({ items: items, parent: $('#section') });\n});\n\n/*\n * The DynamicReport class defines the operations available from the controller.\n */\nvar DynamicReport = function() {\n};\n\nDynamicReport.prototype = new Items();\n\nDynamicReport.prototype.id  = '#dynamicReport';\n\nDynamicReport.prototype.formName  = 'modalDynamicReport';\n\nDynamicReport.prototype.modalId   = '#modalDynamicReport';\n\nDynamicReport.prototype.createSelector = \".createDynamicReport\";\n\nDynamicReport.prototype.get = function(options) {\n    $.ajax({\n        url: options.url\n    })\n        .always(options.always)\n        .done(options.success)\n        .fail(function(jqXHR) {\n            var status_msg = getStatusMsg(jqXHR);\n            showError(options.errorSibling, status_msg);\n        });\n};\n\nDynamicReport.prototype.post = function(options) {\n    $.ajax({\n        url: options.url,\n        type: 'POST',\n        data: options.data\n    })\n        .always(options.always)\n        .done(options.success)\n        .fail(function(jqXHR) {\n            var status_msg = getStatusMsg(jqXHR);\n            showError(options.errorSibling, status_msg);\n        });\n};\n\n/*\n * The DynamicReportView class defines the DOM operations from the Web interface.\n */\n\n\nvar DynamicReportView = function(options) {\n    ItemView.call(this,options);\n    var that = this;\n    this.parent = options.parent;\n    this.items = options.items;\n};\n\nDynamicReportView.prototype = (function(){\n    function F(){}\n    F.prototype = ItemView.prototype;\n    return new F();\n})();\n\n"]}