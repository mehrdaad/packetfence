#!/bin/sh
# postinst script for packetfence
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Force the LC_CTYPE to C to avoid i18n problems during postinstallation.
LC_CTYPE=C
export LC_CTYPE

if $(dpkg-distribution --is_jessie) ; then
    DIST=jessie
fi
if $(dpkg-distribution --is_wheezy) ; then
    DIST=wheezy
fi
if $(dpkg-distribution --is_precise) ; then
    DIST=precise
fi

case "$1" in
    configure)
        export PACKETFENCE=/usr/local/pf
        export PERL5LIB=/usr/local/pf/lib
        find $PACKETFENCE/conf -type f -exec chmod 664 '{}' \;
        find $PACKETFENCE/conf -type d -exec chmod 775 '{}' \;
        chmod 2775 -R $PACKETFENCE/var
        chmod 2775 -R $PACKETFENCE/logs
        chmod 0755 $PACKETFENCE/addons/*.pl
        chmod 0755 $PACKETFENCE/addons/*.sh
        chmod 0755 $PACKETFENCE/addons/upgrade/*.pl
        chmod 0755 $PACKETFENCE/addons/watchdog/*.sh
        chmod 0755 $PACKETFENCE/bin/*
        chmod 0755 $PACKETFENCE/sbin/*
        chmod 0755 $PACKETFENCE/html/pfappserver/script/*.pl
        chmod ug+s $PACKETFENCE/bin/pfcmd

        chown pf:pf $PACKETFENCE
        find $PACKETFENCE '(' -type d -or -type f ')' -not -name pfcmd -print0 | xargs -0 chown pf:pf
        if [ -e /etc/lsb-release ]; then
            chown dhcpd:dhcpd $PACKETFENCE/var/dhcpd/dhcpd.leases
        else
            chown root:root $PACKETFENCE/var/dhcpd/dhcpd.leases
        fi

        # link to latest SQL schema
        if [ -h "$PACKETFENCE/db/pf-schema.sql" ]; then
            rm $PACKETFENCE/db/pf-schema.sql
        fi
        cd $PACKETFENCE/db
        VERSIONSQL=$(ls pf-schema-* |sort -r | head -1)
        ln -f -s $VERSIONSQL ./pf-schema.sql

        #Check if log files exist and create them with the correct owner
        for fic_log in packetfence.log
        do
        if [ ! -e /usr/local/pf/logs/$fic_log ]; then
            touch /usr/local/pf/logs/$fic_log
            chown pf.pf /usr/local/pf/logs/$fic_log
        fi
        done

        #Make ssl certificate
        cd /usr/local/pf
        make conf/ssl/server.pem


        # Create OMAPI key
        if [ ! -f /usr/local/pf/conf/pf_omapi_key ]; then
            /usr/bin/openssl rand -base64 -out /usr/local/pf/conf/pf_omapi_key 32
        fi

        # Create server local RADIUS secret
        if [ ! -f /usr/local/pf/conf/local_secret ]; then
            date +%s | sha256sum | base64 | head -c 32 > /usr/local/pf/conf/local_secret
        fi


	    if [ ! -f /usr/local/pf/raddb/certs/dh ]; then
	        echo "Building default RADIUS certificates..."
	        cd /usr/local/pf/raddb/certs
	        make
	    else
	        echo "DH already exists, won't touch it!"
        fi

        if [ ! -f /usr/local/pf/conf/pf.conf ]; then
            echo "pf.conf doesnt exits"
            touch /usr/local/pf/conf/pf.conf
            chown pf.pf /usr/local/pf/conf/pf.conf
        else
            echo "pf.conf already exists, won't touch it!"
        fi

        echo "Restarting rsyslog"
        systemctl restart rsyslog

        # managing services
        set +e
        for service in apache2 snmptrapfmt bind9 freeradius apparmor isc-dhcp-server haproxy keepalived redis-server smbd samba winbind nmbd mysql; do

            if [ -e "/etc/init.d/"$service ] ; then
                invoke-rc.d $service stop  > /dev/null 2>&1
                if [ -e /etc/lsb-release ]; then
                    update-rc.d -f $service remove > /dev/null 2>&1
                else
                    update-rc.d $service remove > /dev/null 2>&1
                fi
            fi
            if [ ${DIST} = "jessie" ] ; then
                if [ -e "/lib/systemd/system/"$service".service" ] ; then
                    systemctl stop $service
                    systemctl disable $service
                fi
            fi

        done
        set -e


        /sbin/ldconfig
        # Enabling ip forwarding
        echo "# ip forwarding enabled by packetfence" > /etc/sysctl.d/99-ip_forward.conf
        echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.d/99-ip_forward.conf
        sysctl -p /etc/sysctl.d/99-ip_forward.conf
 
        #Starting PacketFence.
        echo "Starting PacketFence Administration GUI..."
        #removing old cache
        rm -rf /usr/local/pf/var/cache/
        # Start packetfence web administration
        if [ `systemctl get-default` = "packetfence-cluster.target" ]; then
	    echo "This is an upgrade on a clustered system. We don't change the default systemd target."
        else
            echo "Setting packetfence.target as the default systemd target."
           /bin/systemctl set-default packetfence.target
        fi
        echo "Restarting journald to enable persistent logging"
        /bin/systemctl restart systemd-journald

        systemctl enable packetfence-mariadb
        systemctl enable packetfence-redis-cache
        systemctl enable packetfence-config
        systemctl disable packetfence-iptables
        systemctl enable packetfence-routes
        systemctl enable packetfence-httpd.admin
        systemctl daemon-reload
        systemctl isolate packetfence-base.target

        set +e
        /usr/local/pf/bin/pfcmd configreload
        set -e
        /bin/systemctl start packetfence-httpd.admin
        systemctl enable packetfence-iptables
        echo Installation complete
        echo "* Please fire up your Web browser and go to https://@ip_packetfence:1443/configurator to complete your PacketFence configuration."
        echo "* Please stop your iptables service if you don't have access to configurator."
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
# vim: set shiftwidth=4:
# vim: set expandtab:
